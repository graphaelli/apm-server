// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package model

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/lyft/protoc-gen-validate/validate"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	// Types that are valid to be assigned to Id:
	//	*User_StringValue
	//	*User_NumberValue
	Id                   isUser_Id `protobuf_oneof:"id"`
	Email                string    `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Username             string    `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

type isUser_Id interface {
	isUser_Id()
}

type User_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type User_NumberValue struct {
	NumberValue float64 `protobuf:"fixed64,2,opt,name=number_value,json=numberValue,proto3,oneof"`
}

func (*User_StringValue) isUser_Id() {}

func (*User_NumberValue) isUser_Id() {}

func (m *User) GetId() isUser_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *User) GetStringValue() string {
	if x, ok := m.GetId().(*User_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *User) GetNumberValue() float64 {
	if x, ok := m.GetId().(*User_NumberValue); ok {
		return x.NumberValue
	}
	return 0
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*User) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*User_StringValue)(nil),
		(*User_NumberValue)(nil),
	}
}

func init() {
	proto.RegisterType((*User)(nil), "model.User")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcd, 0xcd, 0x4f, 0x49, 0xcd, 0x91, 0x12, 0x2f,
	0x4b, 0xcc, 0xc9, 0x4c, 0x49, 0x2c, 0x49, 0xd5, 0x87, 0x31, 0x20, 0xf2, 0x4a, 0x6b, 0x18, 0xb9,
	0x58, 0x42, 0x8b, 0x53, 0x8b, 0x84, 0xf4, 0xb9, 0x78, 0x8a, 0x4b, 0x8a, 0x32, 0xf3, 0xd2, 0xe3,
	0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x9d, 0xb8, 0x76, 0xbd, 0x3c,
	0xc0, 0xcc, 0x5a, 0xc4, 0x2c, 0xd1, 0xc0, 0xe1, 0xc1, 0x10, 0xc4, 0x0d, 0x51, 0x11, 0x06, 0x52,
	0x20, 0xa4, 0xcc, 0xc5, 0x93, 0x57, 0x9a, 0x9b, 0x94, 0x5a, 0x04, 0xd5, 0xc0, 0xa4, 0xc0, 0xa8,
	0xc1, 0x08, 0x52, 0x04, 0x11, 0x85, 0x28, 0x52, 0xe0, 0x62, 0x4d, 0xcd, 0x4d, 0xcc, 0xcc, 0x91,
	0x60, 0x46, 0x37, 0x2e, 0x08, 0x22, 0x21, 0xa4, 0xc6, 0xc5, 0x01, 0x72, 0x6e, 0x5e, 0x62, 0x6e,
	0xaa, 0x04, 0x0b, 0x86, 0x22, 0xb8, 0x9c, 0x13, 0x0b, 0x17, 0x53, 0x66, 0x4a, 0x12, 0x1b, 0xd8,
	0xd5, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x39, 0x85, 0x2f, 0x8f, 0xe3, 0x00, 0x00, 0x00,
}
