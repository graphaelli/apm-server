// Code generated by protoc-gen-go. DO NOT EDIT.
// source: span.proto

package model

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/lyft/protoc-gen-validate/validate"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// one of timestamp or start are required, enforced on intake
type Span struct {
	Timestamp     *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id            string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	TransactionId string               `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	TraceId       string               `protobuf:"bytes,4,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	ParentId      string               `protobuf:"bytes,5,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Start         string               `protobuf:"bytes,6,opt,name=start,proto3" json:"start,omitempty"`
	Subtype       string               `protobuf:"bytes,7,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Action        string               `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	//SpanContext context
	Duration *duration.Duration `protobuf:"bytes,9,opt,name=duration,proto3" json:"duration,omitempty"`
	Name     string             `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	//stacktrace
	Type                 string   `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	Sync                 bool     `protobuf:"varint,13,opt,name=sync,proto3" json:"sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Span) Reset()         { *m = Span{} }
func (m *Span) String() string { return proto.CompactTextString(m) }
func (*Span) ProtoMessage()    {}
func (*Span) Descriptor() ([]byte, []int) {
	return fileDescriptor_fc5f2b88b579999f, []int{0}
}

func (m *Span) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Span.Unmarshal(m, b)
}
func (m *Span) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Span.Marshal(b, m, deterministic)
}
func (m *Span) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Span.Merge(m, src)
}
func (m *Span) XXX_Size() int {
	return xxx_messageInfo_Span.Size(m)
}
func (m *Span) XXX_DiscardUnknown() {
	xxx_messageInfo_Span.DiscardUnknown(m)
}

var xxx_messageInfo_Span proto.InternalMessageInfo

func (m *Span) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Span) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Span) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *Span) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *Span) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *Span) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *Span) GetSubtype() string {
	if m != nil {
		return m.Subtype
	}
	return ""
}

func (m *Span) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Span) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Span) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Span) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Span) GetSync() bool {
	if m != nil {
		return m.Sync
	}
	return false
}

func init() {
	proto.RegisterType((*Span)(nil), "model.Span")
}

func init() { proto.RegisterFile("span.proto", fileDescriptor_fc5f2b88b579999f) }

var fileDescriptor_fc5f2b88b579999f = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0xd9, 0x34, 0x69, 0x93, 0xd1, 0x8a, 0x0c, 0xa2, 0xdb, 0x82, 0x5a, 0x44, 0xa4, 0xa7,
	0x54, 0xf4, 0xe2, 0xd5, 0xe2, 0xa5, 0xd7, 0xe8, 0x5d, 0xa6, 0xdd, 0xb5, 0x04, 0x9a, 0x3f, 0xec,
	0x6e, 0x84, 0xbe, 0x92, 0x4f, 0x20, 0x9e, 0x7c, 0x1d, 0xdf, 0x42, 0x76, 0x93, 0x54, 0x49, 0x6f,
	0x3b, 0xf3, 0x7d, 0x33, 0xfb, 0x63, 0x00, 0x74, 0x49, 0x79, 0x5c, 0xaa, 0xc2, 0x14, 0x18, 0x64,
	0x85, 0x90, 0x9b, 0xf1, 0xc5, 0xba, 0x28, 0xd6, 0x1b, 0x39, 0x73, 0xcd, 0x65, 0xf5, 0x36, 0x13,
	0x95, 0x22, 0x93, 0x16, 0x8d, 0x36, 0xbe, 0xec, 0x72, 0x93, 0x66, 0x52, 0x1b, 0xca, 0xca, 0x46,
	0x38, 0x7b, 0xa7, 0x4d, 0x2a, 0xc8, 0xc8, 0x59, 0xfb, 0xa8, 0xc1, 0xd5, 0x67, 0x0f, 0xfc, 0xe7,
	0x92, 0x72, 0x7c, 0x80, 0x68, 0x37, 0xc4, 0xd9, 0x84, 0x4d, 0x0f, 0xee, 0xc6, 0x71, 0xbd, 0x36,
	0x6e, 0xd7, 0xc6, 0x2f, 0xad, 0x91, 0xfc, 0xc9, 0x38, 0x02, 0x2f, 0x15, 0xdc, 0x9b, 0xb0, 0x69,
	0x34, 0x8f, 0xbe, 0x7e, 0xbe, 0x7b, 0xbe, 0xf2, 0x8e, 0x59, 0xe2, 0xa5, 0x02, 0x6f, 0xe1, 0xc8,
	0x28, 0xca, 0x35, 0xad, 0x6c, 0xd8, 0xd7, 0x54, 0xf0, 0x5e, 0x57, 0x1b, 0xfe, 0x13, 0x16, 0x02,
	0xaf, 0x21, 0x34, 0x8a, 0x56, 0xd2, 0xba, 0x7e, 0xd7, 0x1d, 0x38, 0xb4, 0x10, 0x78, 0x03, 0x51,
	0x49, 0x4a, 0xe6, 0xc6, 0x6a, 0x41, 0x57, 0x0b, 0x6b, 0xb6, 0x10, 0x78, 0x02, 0x81, 0x36, 0xa4,
	0x0c, 0xef, 0x5b, 0x27, 0xa9, 0x0b, 0xe4, 0x30, 0xd0, 0xd5, 0xd2, 0x6c, 0x4b, 0xc9, 0x07, 0xae,
	0xdf, 0x96, 0x78, 0x0a, 0xfd, 0x3a, 0x09, 0x0f, 0x1d, 0x68, 0x2a, 0x7c, 0x84, 0xb0, 0xbd, 0x38,
	0x8f, 0xdc, 0x6d, 0x46, 0x7b, 0xb7, 0x79, 0x6a, 0x84, 0x39, 0xd8, 0x24, 0xc1, 0x07, 0xf3, 0x42,
	0x96, 0xec, 0xc6, 0xf0, 0x1c, 0xfc, 0x9c, 0x32, 0xc9, 0xa1, 0x9b, 0xd6, 0xb5, 0x2d, 0x76, 0x81,
	0x0e, 0xf7, 0xb0, 0x0b, 0x86, 0xe0, 0xeb, 0x6d, 0xbe, 0xe2, 0xc3, 0x09, 0x9b, 0x86, 0x89, 0x7b,
	0x2f, 0xfb, 0xee, 0xeb, 0xfb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb7, 0x79, 0xbe, 0xa8, 0x30,
	0x02, 0x00, 0x00,
}
