// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transaction.proto

package model

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/lyft/protoc-gen-validate/validate"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Transaction struct {
	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id        string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	TraceId   string               `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	ParentId  string               `protobuf:"bytes,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Context context = 5;
	Duration             *duration.Duration `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	Name                 string             `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Result               string             `protobuf:"bytes,8,opt,name=result,proto3" json:"result,omitempty"`
	Type                 string             `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	Marks                map[string]float64 `protobuf:"bytes,10,rep,name=marks,proto3" json:"marks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Sampled              bool               `protobuf:"varint,11,opt,name=sampled,proto3" json:"sampled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{0}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Transaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Transaction) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *Transaction) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *Transaction) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Transaction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Transaction) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *Transaction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Transaction) GetMarks() map[string]float64 {
	if m != nil {
		return m.Marks
	}
	return nil
}

func (m *Transaction) GetSampled() bool {
	if m != nil {
		return m.Sampled
	}
	return false
}

type Transaction_SpanCount struct {
	Started              int32    `protobuf:"varint,1,opt,name=started,proto3" json:"started,omitempty"`
	Dropped              int32    `protobuf:"varint,2,opt,name=dropped,proto3" json:"dropped,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction_SpanCount) Reset()         { *m = Transaction_SpanCount{} }
func (m *Transaction_SpanCount) String() string { return proto.CompactTextString(m) }
func (*Transaction_SpanCount) ProtoMessage()    {}
func (*Transaction_SpanCount) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cc4e03d2c28c490, []int{0, 0}
}

func (m *Transaction_SpanCount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_SpanCount.Unmarshal(m, b)
}
func (m *Transaction_SpanCount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_SpanCount.Marshal(b, m, deterministic)
}
func (m *Transaction_SpanCount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_SpanCount.Merge(m, src)
}
func (m *Transaction_SpanCount) XXX_Size() int {
	return xxx_messageInfo_Transaction_SpanCount.Size(m)
}
func (m *Transaction_SpanCount) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_SpanCount.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_SpanCount proto.InternalMessageInfo

func (m *Transaction_SpanCount) GetStarted() int32 {
	if m != nil {
		return m.Started
	}
	return 0
}

func (m *Transaction_SpanCount) GetDropped() int32 {
	if m != nil {
		return m.Dropped
	}
	return 0
}

func init() {
	proto.RegisterType((*Transaction)(nil), "model.Transaction")
	proto.RegisterMapType((map[string]float64)(nil), "model.Transaction.MarksEntry")
	proto.RegisterType((*Transaction_SpanCount)(nil), "model.Transaction.SpanCount")
}

func init() { proto.RegisterFile("transaction.proto", fileDescriptor_2cc4e03d2c28c490) }

var fileDescriptor_2cc4e03d2c28c490 = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x8e, 0xda, 0x30,
	0x10, 0xc6, 0xe5, 0xfc, 0x81, 0x64, 0x72, 0xa1, 0x56, 0xd5, 0x9a, 0x54, 0xb4, 0x51, 0xd5, 0x43,
	0x4e, 0x41, 0x82, 0x0b, 0xea, 0xa5, 0x2a, 0x6d, 0x0f, 0x1c, 0x7a, 0x71, 0xb9, 0x57, 0x06, 0x7b,
	0x51, 0x44, 0x12, 0x5b, 0x8e, 0x83, 0xc4, 0x2b, 0xed, 0x23, 0xec, 0x69, 0x5f, 0x67, 0x1f, 0x62,
	0xa5, 0x55, 0x1c, 0x42, 0x56, 0xec, 0x6d, 0xbe, 0xf9, 0x7e, 0x33, 0x9e, 0x7c, 0x81, 0x77, 0x46,
	0xb3, 0xaa, 0x66, 0x7b, 0x93, 0xcb, 0x2a, 0x53, 0x5a, 0x1a, 0x89, 0xfd, 0x52, 0x72, 0x51, 0xc4,
	0x9f, 0x0f, 0x52, 0x1e, 0x0a, 0x31, 0xb7, 0xcd, 0x5d, 0x73, 0x37, 0xe7, 0x8d, 0x66, 0x03, 0x16,
	0x7f, 0xb9, 0xf5, 0x4d, 0x5e, 0x8a, 0xda, 0xb0, 0x52, 0x5d, 0x80, 0x8f, 0x27, 0x56, 0xe4, 0x9c,
	0x19, 0x31, 0xef, 0x8b, 0xce, 0xf8, 0xfa, 0xec, 0x42, 0xb4, 0x1d, 0x9e, 0xc5, 0x2b, 0x08, 0xaf,
	0xb3, 0x04, 0x25, 0x28, 0x8d, 0x16, 0x71, 0xd6, 0x6d, 0xcf, 0xfa, 0xed, 0xd9, 0xb6, 0x27, 0xe8,
	0x00, 0xe3, 0x29, 0x38, 0x39, 0x27, 0x4e, 0x82, 0xd2, 0x70, 0x1d, 0x3e, 0x3c, 0x3d, 0xba, 0x9e,
	0x76, 0x26, 0x88, 0x3a, 0x39, 0xc7, 0xdf, 0x20, 0x30, 0x9a, 0xed, 0xc5, 0xff, 0x9c, 0x13, 0xf7,
	0x16, 0x18, 0x5b, 0x6b, 0xc3, 0xf1, 0x27, 0x08, 0x15, 0xd3, 0xa2, 0x32, 0x2d, 0xe6, 0xb5, 0x18,
	0x0d, 0xba, 0xc6, 0x86, 0xe3, 0x9f, 0x10, 0xf4, 0xdf, 0x4c, 0x46, 0xf6, 0xac, 0xe9, 0x9b, 0xb3,
	0x7e, 0x5f, 0x80, 0x35, 0xb4, 0xdb, 0xfd, 0x7b, 0xe4, 0x04, 0x88, 0x5e, 0xc7, 0x30, 0x06, 0xaf,
	0x62, 0xa5, 0x20, 0x63, 0xbb, 0xda, 0xd6, 0xf8, 0x03, 0x8c, 0xb4, 0xa8, 0x9b, 0xc2, 0x90, 0xc0,
	0x76, 0x2f, 0x0a, 0xcf, 0xc0, 0x33, 0x67, 0x25, 0x48, 0x78, 0x7b, 0xad, 0x6d, 0xe3, 0x25, 0xf8,
	0x25, 0xd3, 0xc7, 0x9a, 0x40, 0xe2, 0xa6, 0xd1, 0x62, 0x96, 0xd9, 0xdf, 0x94, 0xbd, 0x0a, 0x32,
	0xfb, 0xdb, 0xfa, 0x7f, 0x2a, 0xa3, 0xcf, 0xb4, 0x63, 0x31, 0x81, 0x71, 0xcd, 0x4a, 0x55, 0x08,
	0x4e, 0xa2, 0x04, 0xa5, 0x01, 0xed, 0x65, 0xfc, 0x03, 0xc2, 0x7f, 0x8a, 0x55, 0xbf, 0x64, 0x53,
	0x19, 0x8b, 0x19, 0xa6, 0x8d, 0xe0, 0x36, 0x7f, 0x9f, 0xf6, 0xb2, 0x75, 0xb8, 0x96, 0x4a, 0x89,
	0x2e, 0x66, 0x9f, 0xf6, 0x32, 0x5e, 0x01, 0x0c, 0xef, 0xe1, 0x09, 0xb8, 0x47, 0x71, 0xb6, 0xd3,
	0x21, 0x6d, 0x4b, 0xfc, 0x1e, 0xfc, 0x13, 0x2b, 0x1a, 0x61, 0xe7, 0x10, 0xed, 0xc4, 0x77, 0x67,
	0x85, 0x76, 0x23, 0x9b, 0xde, 0xf2, 0x25, 0x00, 0x00, 0xff, 0xff, 0x52, 0x69, 0xb1, 0x6b, 0x7c,
	0x02, 0x00, 0x00,
}
