// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stacktrace.proto

package model

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/lyft/protoc-gen-validate/validate"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StacktraceFrame2 struct {
	AbsPath              string             `protobuf:"bytes,1,opt,name=abs_path,json=absPath,proto3" json:"abs_path,omitempty"`
	Colno                uint32             `protobuf:"varint,2,opt,name=colno,proto3" json:"colno,omitempty"`
	ContextLine          string             `protobuf:"bytes,3,opt,name=context_line,json=contextLine,proto3" json:"context_line,omitempty"`
	Filename             string             `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	Function             string             `protobuf:"bytes,5,opt,name=function,proto3" json:"function,omitempty"`
	LibraryFrame         bool               `protobuf:"varint,6,opt,name=library_frame,json=libraryFrame,proto3" json:"library_frame,omitempty"`
	Lineno               uint32             `protobuf:"varint,7,opt,name=lineno,proto3" json:"lineno,omitempty"`
	Module               string             `protobuf:"bytes,8,opt,name=module,proto3" json:"module,omitempty"`
	PostContext          *_struct.ListValue `protobuf:"bytes,9,opt,name=post_context,json=postContext,proto3" json:"post_context,omitempty"`
	PreContext           *_struct.ListValue `protobuf:"bytes,10,opt,name=pre_context,json=preContext,proto3" json:"pre_context,omitempty"`
	Vars                 map[string][]byte  `protobuf:"bytes,11,rep,name=vars,proto3" json:"vars,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StacktraceFrame2) Reset()         { *m = StacktraceFrame2{} }
func (m *StacktraceFrame2) String() string { return proto.CompactTextString(m) }
func (*StacktraceFrame2) ProtoMessage()    {}
func (*StacktraceFrame2) Descriptor() ([]byte, []int) {
	return fileDescriptor_149f6ea86f1b8936, []int{0}
}

func (m *StacktraceFrame2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StacktraceFrame2.Unmarshal(m, b)
}
func (m *StacktraceFrame2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StacktraceFrame2.Marshal(b, m, deterministic)
}
func (m *StacktraceFrame2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StacktraceFrame2.Merge(m, src)
}
func (m *StacktraceFrame2) XXX_Size() int {
	return xxx_messageInfo_StacktraceFrame2.Size(m)
}
func (m *StacktraceFrame2) XXX_DiscardUnknown() {
	xxx_messageInfo_StacktraceFrame2.DiscardUnknown(m)
}

var xxx_messageInfo_StacktraceFrame2 proto.InternalMessageInfo

func (m *StacktraceFrame2) GetAbsPath() string {
	if m != nil {
		return m.AbsPath
	}
	return ""
}

func (m *StacktraceFrame2) GetColno() uint32 {
	if m != nil {
		return m.Colno
	}
	return 0
}

func (m *StacktraceFrame2) GetContextLine() string {
	if m != nil {
		return m.ContextLine
	}
	return ""
}

func (m *StacktraceFrame2) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *StacktraceFrame2) GetFunction() string {
	if m != nil {
		return m.Function
	}
	return ""
}

func (m *StacktraceFrame2) GetLibraryFrame() bool {
	if m != nil {
		return m.LibraryFrame
	}
	return false
}

func (m *StacktraceFrame2) GetLineno() uint32 {
	if m != nil {
		return m.Lineno
	}
	return 0
}

func (m *StacktraceFrame2) GetModule() string {
	if m != nil {
		return m.Module
	}
	return ""
}

func (m *StacktraceFrame2) GetPostContext() *_struct.ListValue {
	if m != nil {
		return m.PostContext
	}
	return nil
}

func (m *StacktraceFrame2) GetPreContext() *_struct.ListValue {
	if m != nil {
		return m.PreContext
	}
	return nil
}

func (m *StacktraceFrame2) GetVars() map[string][]byte {
	if m != nil {
		return m.Vars
	}
	return nil
}

func init() {
	proto.RegisterType((*StacktraceFrame2)(nil), "model.StacktraceFrame2")
	proto.RegisterMapType((map[string][]byte)(nil), "model.StacktraceFrame2.VarsEntry")
}

func init() { proto.RegisterFile("stacktrace.proto", fileDescriptor_149f6ea86f1b8936) }

var fileDescriptor_149f6ea86f1b8936 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0xcd, 0xca, 0xd3, 0x40,
	0x14, 0x25, 0x4d, 0x7f, 0x92, 0x9b, 0x14, 0xc2, 0x20, 0x3a, 0x06, 0x17, 0xa9, 0x22, 0x64, 0x95,
	0x42, 0x45, 0x14, 0xc5, 0x8d, 0xa2, 0xab, 0x2e, 0x24, 0x42, 0xb7, 0x61, 0x92, 0x4e, 0xda, 0xd0,
	0xc9, 0x4c, 0x98, 0x99, 0x14, 0xfb, 0x6a, 0xae, 0x7c, 0x1d, 0x7d, 0x8a, 0x8f, 0x99, 0xa4, 0x59,
	0x7c, 0x9b, 0x6f, 0x37, 0xe7, 0xdc, 0x73, 0xee, 0x1c, 0xee, 0x81, 0x48, 0x69, 0x52, 0x5d, 0xb4,
	0x24, 0x15, 0xcd, 0x3a, 0x29, 0xb4, 0x40, 0x8b, 0x56, 0x1c, 0x29, 0x8b, 0x5f, 0x9d, 0x84, 0x38,
	0x31, 0xba, 0xb5, 0x64, 0xd9, 0xd7, 0x5b, 0xa5, 0x65, 0x5f, 0xe9, 0x41, 0x14, 0xbf, 0xb8, 0x12,
	0xd6, 0x1c, 0x89, 0xa6, 0xdb, 0xfb, 0x63, 0x18, 0xbc, 0xfe, 0xef, 0x42, 0xf4, 0x6b, 0x5a, 0xf9,
	0x43, 0x92, 0x96, 0xee, 0xd0, 0x4b, 0xf0, 0x48, 0xa9, 0x8a, 0x8e, 0xe8, 0x33, 0x76, 0x12, 0x27,
	0xf5, 0xf3, 0x15, 0x29, 0xd5, 0x4f, 0xa2, 0xcf, 0xe8, 0x19, 0x2c, 0x2a, 0xc1, 0xb8, 0xc0, 0xb3,
	0xc4, 0x49, 0xd7, 0xf9, 0x00, 0xd0, 0x06, 0xc2, 0x4a, 0x70, 0x4d, 0x7f, 0xeb, 0x82, 0x35, 0x9c,
	0x62, 0xd7, 0x9a, 0x82, 0x91, 0xdb, 0x37, 0x9c, 0xa2, 0xb7, 0xe0, 0xd5, 0x0d, 0xa3, 0x9c, 0xb4,
	0x14, 0xcf, 0xcd, 0xf8, 0xab, 0xff, 0xe7, 0xdf, 0x5f, 0x77, 0x2e, 0x67, 0x91, 0x93, 0x4f, 0x23,
	0x14, 0x83, 0x57, 0xf7, 0xbc, 0xd2, 0x8d, 0xe0, 0x78, 0x61, 0xb7, 0x4c, 0x18, 0xbd, 0x81, 0x35,
	0x6b, 0x4a, 0x49, 0xe4, 0xad, 0xa8, 0x4d, 0x50, 0xbc, 0x4c, 0x9c, 0xd4, 0xcb, 0xc3, 0x91, 0xb4,
	0xe1, 0xd1, 0x73, 0x58, 0x9a, 0x08, 0x5c, 0xe0, 0x95, 0x4d, 0x38, 0x22, 0xc3, 0xb7, 0xe2, 0xd8,
	0x33, 0x8a, 0x3d, 0xbb, 0x76, 0x44, 0xe8, 0x0b, 0x84, 0x9d, 0x50, 0xba, 0x18, 0xb3, 0x62, 0x3f,
	0x71, 0xd2, 0x60, 0x17, 0x67, 0xc3, 0x39, 0xb3, 0xfb, 0x39, 0xb3, 0x7d, 0xa3, 0xf4, 0x81, 0xb0,
	0x9e, 0xe6, 0x81, 0xd1, 0x7f, 0x1b, 0xe4, 0xe8, 0x33, 0x04, 0x9d, 0xa4, 0x93, 0x1b, 0x9e, 0x74,
	0x43, 0x27, 0xe9, 0xdd, 0xfc, 0x1e, 0xe6, 0x57, 0x22, 0x15, 0x0e, 0x12, 0x37, 0x0d, 0x76, 0x9b,
	0xcc, 0x36, 0x99, 0x3d, 0xae, 0x23, 0x3b, 0x10, 0xa9, 0xbe, 0x73, 0x2d, 0x6f, 0xb9, 0x95, 0xc7,
	0x1f, 0xc0, 0x9f, 0x28, 0x14, 0x81, 0x7b, 0xa1, 0xb7, 0xb1, 0x26, 0xf3, 0x34, 0x15, 0x5d, 0xcd,
	0x57, 0xb6, 0xa2, 0x30, 0x1f, 0xc0, 0xa7, 0xd9, 0x47, 0xa7, 0x5c, 0xda, 0x3c, 0xef, 0x1e, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x94, 0x37, 0x22, 0x8d, 0x45, 0x02, 0x00, 0x00,
}
