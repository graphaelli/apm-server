// Code generated by protoc-gen-go. DO NOT EDIT.
// source: event.proto

package model

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	// Types that are valid to be assigned to Apm:
	//	*Event_Metadata
	//	*Event_Error
	//	*Event_Transaction
	//	*Event_Span
	Apm                  isEvent_Apm `protobuf_oneof:"apm"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

type isEvent_Apm interface {
	isEvent_Apm()
}

type Event_Metadata struct {
	Metadata *Metadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type Event_Error struct {
	Error *Error `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type Event_Transaction struct {
	Transaction *Transaction `protobuf:"bytes,3,opt,name=transaction,proto3,oneof"`
}

type Event_Span struct {
	Span *Span `protobuf:"bytes,4,opt,name=span,proto3,oneof"`
}

func (*Event_Metadata) isEvent_Apm() {}

func (*Event_Error) isEvent_Apm() {}

func (*Event_Transaction) isEvent_Apm() {}

func (*Event_Span) isEvent_Apm() {}

func (m *Event) GetApm() isEvent_Apm {
	if m != nil {
		return m.Apm
	}
	return nil
}

func (m *Event) GetMetadata() *Metadata {
	if x, ok := m.GetApm().(*Event_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (m *Event) GetError() *Error {
	if x, ok := m.GetApm().(*Event_Error); ok {
		return x.Error
	}
	return nil
}

func (m *Event) GetTransaction() *Transaction {
	if x, ok := m.GetApm().(*Event_Transaction); ok {
		return x.Transaction
	}
	return nil
}

func (m *Event) GetSpan() *Span {
	if x, ok := m.GetApm().(*Event_Span); ok {
		return x.Span
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Event) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Event_Metadata)(nil),
		(*Event_Error)(nil),
		(*Event_Transaction)(nil),
		(*Event_Span)(nil),
	}
}

type InsertResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertResponse) Reset()         { *m = InsertResponse{} }
func (m *InsertResponse) String() string { return proto.CompactTextString(m) }
func (*InsertResponse) ProtoMessage()    {}
func (*InsertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d17a9d3f0ddf27e, []int{1}
}

func (m *InsertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertResponse.Unmarshal(m, b)
}
func (m *InsertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertResponse.Marshal(b, m, deterministic)
}
func (m *InsertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertResponse.Merge(m, src)
}
func (m *InsertResponse) XXX_Size() int {
	return xxx_messageInfo_InsertResponse.Size(m)
}
func (m *InsertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Event)(nil), "model.Event")
	proto.RegisterType((*InsertResponse)(nil), "model.InsertResponse")
}

func init() { proto.RegisterFile("event.proto", fileDescriptor_2d17a9d3f0ddf27e) }

var fileDescriptor_2d17a9d3f0ddf27e = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x90, 0xcf, 0x4a, 0xc4, 0x40,
	0x0c, 0xc6, 0x5b, 0xbb, 0x5d, 0x24, 0x23, 0xab, 0x06, 0x84, 0xd2, 0x93, 0x16, 0x0f, 0x7b, 0xb1,
	0xe0, 0x0a, 0xe2, 0x55, 0x61, 0xa1, 0x1e, 0xbc, 0x54, 0x5f, 0x20, 0xba, 0x39, 0x08, 0xce, 0x1f,
	0x66, 0x06, 0x1f, 0xcf, 0x67, 0x93, 0x99, 0xc6, 0xb5, 0x7b, 0x9b, 0x7c, 0xdf, 0xef, 0x4b, 0x32,
	0x01, 0xc5, 0xdf, 0x6c, 0x62, 0xef, 0xbc, 0x8d, 0x16, 0x6b, 0x6d, 0x77, 0xfc, 0xd5, 0x2a, 0xf6,
	0xde, 0xfa, 0x49, 0x6b, 0x57, 0x9a, 0x23, 0xed, 0x28, 0x92, 0xd4, 0xe7, 0xd1, 0x93, 0x09, 0xf4,
	0x11, 0x3f, 0xad, 0x11, 0x09, 0x82, 0x23, 0x79, 0x77, 0x3f, 0x25, 0xd4, 0xdb, 0xd4, 0x12, 0x6f,
	0xe0, 0xf8, 0x2f, 0xda, 0x94, 0x97, 0xe5, 0x5a, 0x6d, 0x4e, 0xfb, 0xdc, 0xbf, 0x7f, 0x11, 0x79,
	0x28, 0xc6, 0x3d, 0x82, 0xd7, 0x50, 0xe7, 0xb1, 0xcd, 0x51, 0x66, 0x4f, 0x84, 0xdd, 0x26, 0x6d,
	0x28, 0xc6, 0xc9, 0xc4, 0x7b, 0x50, 0xb3, 0xf9, 0x4d, 0x95, 0x59, 0x14, 0xf6, 0xed, 0xdf, 0x19,
	0x8a, 0x71, 0x0e, 0xe2, 0x15, 0x2c, 0xd2, 0x92, 0xcd, 0x22, 0x07, 0x94, 0x04, 0x5e, 0x1d, 0x25,
	0x32, 0x5b, 0x4f, 0x35, 0x54, 0xe4, 0x74, 0x77, 0x06, 0xab, 0x67, 0x13, 0xd8, 0xc7, 0x91, 0x83,
	0xb3, 0x26, 0xf0, 0xe6, 0x01, 0xaa, 0x47, 0xa7, 0xf1, 0x16, 0x96, 0x93, 0x81, 0xfb, 0xdd, 0xd2,
	0x3f, 0xdb, 0x0b, 0xa9, 0x0e, 0x53, 0x5d, 0xb1, 0x2e, 0xdf, 0x97, 0xf9, 0x26, 0x77, 0xbf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x13, 0xe8, 0xe3, 0x1c, 0x65, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApmClient is the client API for Apm service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApmClient interface {
	Insert(ctx context.Context, opts ...grpc.CallOption) (Apm_InsertClient, error)
}

type apmClient struct {
	cc *grpc.ClientConn
}

func NewApmClient(cc *grpc.ClientConn) ApmClient {
	return &apmClient{cc}
}

func (c *apmClient) Insert(ctx context.Context, opts ...grpc.CallOption) (Apm_InsertClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Apm_serviceDesc.Streams[0], "/model.Apm/Insert", opts...)
	if err != nil {
		return nil, err
	}
	x := &apmInsertClient{stream}
	return x, nil
}

type Apm_InsertClient interface {
	Send(*Event) error
	CloseAndRecv() (*InsertResponse, error)
	grpc.ClientStream
}

type apmInsertClient struct {
	grpc.ClientStream
}

func (x *apmInsertClient) Send(m *Event) error {
	return x.ClientStream.SendMsg(m)
}

func (x *apmInsertClient) CloseAndRecv() (*InsertResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(InsertResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ApmServer is the server API for Apm service.
type ApmServer interface {
	Insert(Apm_InsertServer) error
}

func RegisterApmServer(s *grpc.Server, srv ApmServer) {
	s.RegisterService(&_Apm_serviceDesc, srv)
}

func _Apm_Insert_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ApmServer).Insert(&apmInsertServer{stream})
}

type Apm_InsertServer interface {
	SendAndClose(*InsertResponse) error
	Recv() (*Event, error)
	grpc.ServerStream
}

type apmInsertServer struct {
	grpc.ServerStream
}

func (x *apmInsertServer) SendAndClose(m *InsertResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *apmInsertServer) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Apm_serviceDesc = grpc.ServiceDesc{
	ServiceName: "model.Apm",
	HandlerType: (*ApmServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Insert",
			Handler:       _Apm_Insert_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "event.proto",
}
